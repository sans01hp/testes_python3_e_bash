#!/bin/bash

cat << 'EXPLICACAO'

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
üìò EXPLICA√á√ÉO: IFS, READ e WHILE EM BASH
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üîπ 1. O que √© IFS?
--------------------
IFS significa "Internal Field Separator" (Separador Interno de Campos).

Por padr√£o, o IFS √© usado pelo shell para **dividir strings em palavras** com base em espa√ßos, quebras de linha ou tabula√ß√µes.

Exemplo:
----------
linha="usuario senha outro"

IFS=" " read user pass outro <<< "$linha"

# Resultado:
# user="usuario"
# pass="senha"
# outro="outro"

Se n√£o quiser que o espa√ßo divida a string, voc√™ pode alterar ou limpar o IFS:
IFS='' (ou unset IFS)

üîπ 2. Comando READ
--------------------
O comando `read` serve para ler uma linha da entrada padr√£o e armazenar o valor em uma vari√°vel.

Forma b√°sica:
--------------
read variavel

Tamb√©m pode ler m√∫ltiplas vari√°veis:
read var1 var2 var3

A linha ser√° dividida com base no valor atual de IFS.

üîπ 3. O que faz o -r?
--------------------
A op√ß√£o `-r` no `read` impede que a barra invertida `\` seja interpretada como caractere de escape.

Exemplo sem -r:
----------------
linha="isso √© uma linha com \\ e continua"
read texto <<< "$linha"
# A barra invertida pode ser removida ou interpretada.

Exemplo com -r:
----------------
read -r texto <<< "$linha"
# A string ser√° lida literalmente com as barras preservadas.

üîπ 4. Leitura de arquivo linha a linha com while e read
--------------------------------------------------------
Forma mais segura e comum para ler arquivos:

while IFS= read -r linha; do
    echo "Linha lida: $linha"
done < arquivo.txt

Explica√ß√£o:
-------------
- `IFS=`: limpa o separador para n√£o quebrar a linha em palavras.
- `-r` : evita que `read` interprete `\` como escape.
- `done < arquivo.txt`: redireciona o conte√∫do do arquivo para o loop.

‚ö†Ô∏è Sem IFS= e -r, voc√™ pode ter problemas com:
  - espa√ßos sendo removidos ou dividindo vari√°veis
  - barras invertidas desaparecendo

üîπ 5. Exemplo completo pr√°tico:
-------------------------------
cat << EOF > nomes.txt
Ana Paula
Jo√£o\ da\ Silva
Carlos
EOF

while IFS= read -r nome; do
    echo "Nome: $nome"
done < nomes.txt

# Sa√≠da:
# Nome: Ana Paula
# Nome: Jo√£o\ da\ Silva
# Nome: Carlos

# Note que a barra invertida ser√° mantida com -r.

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
FIM DA EXPLICA√á√ÉO
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

EXPLICACAO
