#!/bin/bash

# Script para automatizar git push usando variÃ¡veis de ambiente
# As variÃ¡veis NOME e TOKEN devem ser definidas fora do script, assim:
# export NOME="seu_nome"
# export TOKEN="seu_token_github"
# Verifica se a variÃ¡vel NOME estÃ¡ definida

if [ -z "$NOME" ]; then
  echo "ðŸš« ERRO: VariÃ¡vel de ambiente NOME nÃ£o definida."
  echo "Defina com: export NOME=\"seu_nome\""
  exit 1
fi

# Verifica se a variÃ¡vel TOKEN estÃ¡ definida
if [ -z "$TOKEN" ]; then
  echo "ðŸš« ERRO: VariÃ¡vel de ambiente TOKEN nÃ£o definida."
  echo "Defina com: export TOKEN=\"seu_token_github\""
  exit 1
fi

# Configura git user.name e user.email localmente no repositÃ³rio, para evitar erro de commit
git config user.name "$NOME"
# Aqui vocÃª pode ajustar o email, por exemplo:
git config user.email "$NOME@users.noreply.github.com"

# Adiciona todos os arquivos
echo "ðŸ“‚ Adicionando arquivos..."
git add .

# Pede a mensagem do commit
read -p "Digite a mensagem do commit: " MENSAGEM

if [ -z "$MENSAGEM" ]; then
  echo "ðŸš« ERRO: Mensagem de commit nÃ£o pode ser vazia."
  exit 1
fi

# Faz o commit
git commit -m "$MENSAGEM"

# ObtÃ©m a URL remota atual
REMOTE_URL=$(git remote get-url origin)

# Substitui a URL para colocar o token no HTTPS (para autenticaÃ§Ã£o)
REMOTE_URL_COM_TOKEN=$(echo "$REMOTE_URL" | sed -E "s#(https://)(.*)#\1$TOKEN@\2#")

# Faz o push usando a URL com token embutido
echo "ðŸš€ Fazendo push para o GitHub..."
git push "$REMOTE_URL_COM_TOKEN" HEAD

echo "âœ… Push concluÃ­do com sucesso!"
