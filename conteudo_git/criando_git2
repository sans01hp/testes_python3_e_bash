#!/bin/bash

# =====================================================
# SCRIPT EXEMPLO: inicializar, configurar remoto e subir
# =====================================================

# üí° Use printf em vez de echo para padronizar.
printf "\nüöÄ Inicializando reposit√≥rio Git...\n"

# 1Ô∏è‚É£ Inicializa o reposit√≥rio local, se ainda n√£o existir
if [ -d ".git" ]; then
  printf "J√° existe um reposit√≥rio Git aqui.\n"
else
  git init
  printf "Reposit√≥rio Git inicializado.\n"
fi

# 2Ô∏è‚É£ Cria um .gitignore, se n√£o existir
if [ ! -f ".gitignore" ]; then
  printf "# Ignorar arquivos sens√≠veis e tempor√°rios\n" > .gitignore
  printf ".env\nnode_modules/\n*.log\n__pycache__/\n" >> .gitignore
  printf ".gitignore criado.\n"
else
  printf ".gitignore j√° existe.\n"
fi

# 3Ô∏è‚É£ Configura user.name e user.email LOCALMENTE, se n√£o tiver
LOCAL_USER=$(git config user.name)
LOCAL_EMAIL=$(git config user.email)

if [ -z "$LOCAL_USER" ] || [ -z "$LOCAL_EMAIL" ]; then
  printf "Configurar nome de usu√°rio Git: "
  read -r USER_NAME
  git config user.name "$USER_NAME"

  printf "Configurar e-mail Git: "
  read -r USER_EMAIL
  git config user.email "$USER_EMAIL"

  printf "Configura√ß√£o local salva.\n"
else
  printf "Configura√ß√£o Git local j√° definida: %s <%s>\n" "$LOCAL_USER" "$LOCAL_EMAIL"
fi

# 4Ô∏è‚É£ Adiciona arquivos, exceto os ignorados
git add .
printf "Arquivos adicionados ao stage.\n"

# 5Ô∏è‚É£ Faz commit
printf "Mensagem do commit inicial: "
read -r COMMIT_MSG
git commit -m "$COMMIT_MSG"
printf "Commit criado.\n"

# 6Ô∏è‚É£ Configura remoto USANDO VARI√ÅVEL DE AMBIENTE
# ‚ö†Ô∏è IMPORTANTE: N√£o escreva seu token aqui!
# Use: export GITHUB_URL="https://<token>@github.com/usuario/repositorio.git"
if [ -z "$GITHUB_URL" ]; then
  printf "‚ö†Ô∏è  Vari√°vel de ambiente GITHUB_URL n√£o definida.\n"
  printf "Use: export GITHUB_URL=\"https://<token>@github.com/usuario/repositorio.git\"\n"
  exit 1
fi

# Verifica se remoto j√° existe
REMOTE_URL=$(git remote get-url origin 2>/dev/null)

if [ -z "$REMOTE_URL" ]; then
  git remote add origin "$GITHUB_URL"
  printf "Reposit√≥rio remoto configurado.\n"
else
  printf "Remoto j√° existe: %s\n" "$REMOTE_URL"
fi

# 7Ô∏è‚É£ Faz push inicial e define upstream (-u)
BRANCH=$(git branch --show-current)
if [ -z "$BRANCH" ]; then
  BRANCH="main"
fi

git push -u origin "$BRANCH"

printf "\n‚úÖ C√≥digo enviado para o reposit√≥rio remoto com sucesso!\n"
